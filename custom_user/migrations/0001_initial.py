# Generated by Django 3.1.3 on 2020-11-07 13:49

import custom_user.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('full_name', models.CharField(blank=True, db_column='full_name', max_length=50, null=True, verbose_name='Full Name')),
                ('user_image', models.ImageField(blank=True, db_column='user_image', null=True, upload_to='user/profile/photo/', verbose_name='Profile Image')),
                ('device_token', models.CharField(blank=True, db_column='device_token', max_length=50, null=True, verbose_name='Device Token')),
                ('about_me', models.TextField(blank=True, db_column='about_me', null=True, verbose_name='About Me')),
                ('location', models.TextField(blank=True, db_column='location', null=True, verbose_name='Location')),
                ('address', models.TextField(blank=True, db_column='address', null=True, verbose_name='Address')),
                ('zip_code', models.BigIntegerField(blank=True, db_column='zip_code', null=True, verbose_name='Zip Code')),
                ('latitude', models.BigIntegerField(blank=True, db_column='latitude', null=True, verbose_name='Latitude')),
                ('longitude', models.BigIntegerField(blank=True, db_column='longitude', null=True, verbose_name='Longitude')),
                ('distance', models.IntegerField(blank=True, db_column='distance', null=True, verbose_name='Distance')),
                ('otp', models.IntegerField(blank=True, db_column='otp', null=True, verbose_name='OTP')),
                ('update_by', models.IntegerField(blank=True, db_column='update_by', null=True, verbose_name='Update By')),
                ('update_dt', models.IntegerField(blank=True, db_column='update_dt', null=True, verbose_name='Update Dt')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'User Info',
                'db_table': 'User_Info',
            },
            managers=[
                ('objects', custom_user.models.UserManager()),
            ],
        ),
    ]
